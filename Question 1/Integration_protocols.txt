Integration protocols can vary widely depending on the systems or services you are trying to integrate. Here are examples of different integration protocols and example Python 3 scripts for each:

 1. RESTful API Integration (using `requests` library)

```python
import requests

# Example GET request
response = requests.get("https://api.example.com/data")
if response.status_code == 200:
    data = response.json()
    print(data)
else:
    print(f"Error: {response.status_code}")

# Example POST request with data
payload = {"key1": "value1", "key2": "value2"}
response = requests.post("https://api.example.com/create", json=payload)
if response.status_code == 201:
    created_data = response.json()
    print(created_data)
else:
    print(f"Error: {response.status_code}")
```

 2. SOAP Web Services Integration (using `zeep` library)

```python
from zeep import Client

# Example SOAP request
client = Client('http://www.example.com/soap?wsdl')
result = client.service.MethodName(arg1, arg2)
print(result)
```

 3. MQTT (Message Queuing Telemetry Transport) Integration (using `paho-mqtt` library)

```python
import paho.mqtt.client as mqtt

# Example MQTT subscriber
def on_message(client, userdata, message):
    print(f"Received message: {message.payload}")

client = mqtt.Client()
client.on_message = on_message
client.connect("broker.example.com", 1883, 60)
client.subscribe("topic/example")
client.loop_forever()
```

 4. GraphQL API Integration (using `requests` library)

```python
import requests

# Example GraphQL query
query = """
  query {
    getUser(id: 123) {
      id
      name
      email
    }
  }
"""

headers = {"Content-Type": "application/json", "Authorization": "Bearer YOUR_ACCESS_TOKEN"}
response = requests.post("https://api.example.com/graphql", json={"query": query}, headers=headers)

if response.status_code == 200:
    data = response.json()
    print(data)
else:
    print(f"Error: {response.status_code}")
```

 5. Webhooks (Receiving HTTP POST requests)

```python
from flask import Flask, request

app = Flask(__name__)

@app.route('/webhook', methods=['POST'])
def webhook():
    data = request.get_json()
    print(f"Received webhook data: {data}")
    return "Webhook received successfully!"

if __name__ == '__main__':
    app.run(port=5000)
```
